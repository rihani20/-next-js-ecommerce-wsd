// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Product {
  id                     String                 @id @default(uuid()) @db.VarChar(36)
  name                   String                 @db.VarChar(255)
  priceInCent            Int
  filePath               String                 @db.VarChar(255)
  imagePath              String                 @db.VarChar(255)
  description            String                 @db.Text
  isAvailableForPurchase Boolean                @default(true)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  orders                 Order[]
  DownloadVerification   DownloadVerification[]
  discountCodes          DiscountCode[]
}

model User {
  id        String   @id @default(uuid()) @db.VarChar(36)
  email     String   @unique @db.VarChar(191)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String   @id @default(uuid()) @db.VarChar(36)
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           String   @db.VarChar(36)
  productId        String   @db.VarChar(36)
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product          Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  discountCodeId   String?   @db.VarChar(36)
  discountCode     DiscountCode? @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id        String   @id @default(uuid()) @db.VarChar(36)
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String   @db.VarChar(36)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model DiscountCode {
  id             String       @id @default(uuid()) @db.VarChar(36)
  code           String       @unique @db.VarChar(191)
  discountAmount Int
  discountType   DiscountType
  uses           Int          @default(0)
  isActive       Boolean      @default(true)
  allProducts    Boolean      @default(false)
  createdAt      DateTime     @default(now())
  limit          Int?
  expiresAt      DateTime?

  products Product[]
  orders   Order[]
}

enum DiscountType {
  PERCENTAGE
  FIXED
}